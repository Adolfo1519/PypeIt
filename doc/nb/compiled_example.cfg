# PypIt execution options.
[run]
    # Number of CPUs to use (-1 means all bar one CPU, -2 means all bar
    # two CPUs)
    ncpus = 1
    # Flag to skip the data reduction and only check that all
    # calibration data are present
    calcheck = False
    # The window of time in hours to search for calibration frames for a
    # science frame
    calwin = 0
    # If True, run in setup mode.  Useful to parse files when starting
    # reduction on a large set of data
    setup = False
    # If True, run quality control in real time.  Otherwise, checks are
    # saved to disk for later inspection
    qa = False
    # If True, pypit will prepare the calibration frames; if false, will
    # only reduce the science frames
    preponly = False
    # If True, pypit will stop and require a user carriage return at
    # every quality control check
    stopcheck = False
    # If True, file sorting will ensure that the idname is made
    useIDname = False
    # Level of screen output: 0 supresses all output; 1 provides high-
    # level output; 2 provides all output
    verbosity = 2
    # Directory relative to calling directory to write master files.
    caldir = MF
    # Directory relative to calling directory to write science files.
    scidir = Science
    # Directory relative to calling directory to write qa files.
    qadir = QA
    # File for the details of the sorted files.  If None, no output is
    # created
    sortdir = lris_blue_long_400_3400_d560
    # Flag to overwrite any existing output files
    overwrite = True

# PypIt reduction rules.
[rdx]
    # Spectrograph that provided the data to be reduced.  Options are:
    # default, KECK_LRISb
    spectrograph = KECK_LRISb
    # Pipeline options that pypit can use for reductions.  Options are:
    # ARMS, ARMED
    pipeline = ARMS
    # Restrict reduction to a single detector with this index
    detnum = None
    # Treatment of master frames.  Use None to select the default
    # behavior (which is?), 'reuse' to use any existing masters, and
    # 'force' to __only__ use master frames.  Options are: None, reuse,
    # force
    masters = None
    # If masters='force', this is the setup name to be used: e.g.,
    # C_02_aa .  The detector number is ignored but the other
    # information must match the Master Frames in the master frame
    # folder.
    setup = None
    # Trim the frame to isolate the data
    trim = True
    # Make a bad pixel mask? Bias frames must be provided.
    badpix = True
    # The frame that should be used to trace the slit centroid.  A
    # master calibrations file can also be specified.
    slit_center_frame = trace
    # The frame that should be used to trace the slit edges.  A master
    # calibrations file can also be specified.
    slit_edge_frame = trace
    # Parameters used to fit the overscan region.
    [[overscan]]
        # Method used to fit the overscan.  Options are: polynomial,
        # savgol, median
        method = savgol
        # Parameters for the overscan subtraction.  For 'polynomial',
        # set params = order, number of pixels, number of repeats ; for
        # 'savgol', set params = order, window size ; for 'median', set
        # params = None or omit the keyword.
        params = 5, 65
    # Parameters used to set the flat-field procedure
    [[flatfield]]
        # Frame to use for field flattening.  Options are: pixelflat,
        # pinhole, or a specified master calibration file.
        frame = /Users/westfall/Work/packages/PYPIT-development-suite/CALIBS/PYPIT_LRISb_pixflat_B400_2x2_15apr2015.fits.gz
        # Method used to flat field the data; use None to skip flat-
        # fielding.  Options are: None, PolyScan, bspline
        method = bspline
        # Flat-field method parameters.  For 'PolyScan', set params =
        # order, numPixels, repeat ; for bspline, set params = spacing
        params = 20
        # Perform a simple 2D PCA on the echelle blaze fits if the value
        # of this argument is >1. The argument value is equal to the
        # number of PCA components. 0 means that no PCA will be
        # performed.  **This is only used with ARMED pipeline.
        twodpca = 0
    # Parameters used to set the flexure-correction procedure
    [[flexure]]
        # Method used to correct for flexure. Use None for no
        # correction.  If slitcen is used, the flexure correction is
        # performed before the extraction of objects.  Options are:
        # None, boxcar, slitcen
        method = boxcar
        # Maximum allowed flexure shift in pixels.
        maxshift = 20
        # Archive sky spectrum to be used for the flexure correction.
        spectrum = None
    # Parameters used to set the wavelength calibration to provide for
    # the output spectra
    [[wavecalib]]
        # Medium used when wavelength calibrating the data.  Options
        # are: vacuum, air
        medium = vacuum
        # Frame of reference for the wavelength calibration.  Options
        # are: heliocentric, barycentric
        refframe = heliocentric
    # Parameters used to set the flux-calibration procedure
    [[fluxcalib]]
        # Flag to perform flux calibration
        flux = False
        # Perform a non-linear correction.  Requires a series of
        # pixelflats of the same lamp and setup and with a variety of
        # exposure times and count rates in every pixel.
        nonlinear = False
        # YAML file with an existing calibration function
        sensfunc = None
    # Parameters used to set the sky-subtraction procedure
    [[skysubtract]]
        # Method used to for sky subtraction.  Options are: None,
        # bspline
        method = bspline
        # Sky-subtraction method parameters.  For bspline, set params =
        # spacing.
        params = 20

# PypIt instrument parameters.
[instrument]
    # Name of the telescope used to obtain the observations.  Options
    # are: KECK, SHANE, WHT, APF, TNG
    telescope = KECK
    # Longitude of the telescope on Earth in degrees.
    longitude = 155.47833
    # Latitude of the telescope on Earth in degrees.
    latitude = 19.82833
    # Elevation of the telescope in m
    elevation = 4160.0
    # Name of the camera.  Options are: LEVY, DEIMOS, HIRES, LRISb,
    # LRISr, NIRSPEC, KASTb, KASTr, DOLORES, ISISb
    camera = LRISb
    # Minimum exposure time in seconds
    minexp = 1.0
    # List of detectors: 1
    [[detector1]]
        # Index of fits extension containing data
        dataext = 0
        # Either the data sections or the header keyword where the valid
        # data sections can be obtained. If defined explicitly should
        # have the format of a numpy array slice
        datasec = DATASEC
        # Either the overscan section or the header keyword where the
        # valid data sections can be obtained. If defined explicitly
        # should have the format of a numpy array slice
        oscansec = BIASSEC
        # Spectra are dispersed along this axis (0 for row, 1 for
        # column)
        dispaxis = 0
        # Gap between the square detector pixels (expressed as a
        # fraction of the x pixel size -- x is predominantly the
        # dispersion axis)
        xgap = 0.0
        # Gap between the square detector pixels (expressed as a
        # fraction of the y pixel size -- x is predominantly the
        # dispersion axis)
        ygap = 0.0
        # The size of a pixel in the y-direction as a multiple of the x
        # pixel size (i.e. xsize = 1.0 -- x is predominantly the
        # dispersion axis)
        ysize = 1.0
        # arcsec per pixel in the spatial dimension for an unbinned
        # pixel
        platescale = 0.135
        # Dark current (e-/hour)
        darkcurr = 0.0
        # The detector saturation level
        saturation = 65535.0
        # Percentage of detector range which is linear (i.e. everything
        # above nonlinear*saturation will be flagged as saturated)
        nonlinear = 0.86
        # Number of amplifiers
        numamplifiers = 2
        # Inverse gain (e-/ADU). A list should be provided if a detector
        # contains more than one amplifier.
        gain = 1.55, 1.56
        # Read-out noise (e-). A list should be provided if a detector
        # contains more than one amplifier.
        ronoise = 3.9, 4.2
        # Suffix to be appended to all saved calibration and extraction
        # frames.
        suffix = _01blue
    # List of detectors: 2
    [[detector2]]
        # Index of fits extension containing data
        dataext = 0
        # Either the data sections or the header keyword where the valid
        # data sections can be obtained. If defined explicitly should
        # have the format of a numpy array slice
        datasec = DATASEC
        # Either the overscan section or the header keyword where the
        # valid data sections can be obtained. If defined explicitly
        # should have the format of a numpy array slice
        oscansec = BIASSEC
        # Spectra are dispersed along this axis (0 for row, 1 for
        # column)
        dispaxis = 0
        # Gap between the square detector pixels (expressed as a
        # fraction of the x pixel size -- x is predominantly the
        # dispersion axis)
        xgap = 0.0
        # Gap between the square detector pixels (expressed as a
        # fraction of the y pixel size -- x is predominantly the
        # dispersion axis)
        ygap = 0.0
        # The size of a pixel in the y-direction as a multiple of the x
        # pixel size (i.e. xsize = 1.0 -- x is predominantly the
        # dispersion axis)
        ysize = 1.0
        # arcsec per pixel in the spatial dimension for an unbinned
        # pixel
        platescale = 0.135
        # Dark current (e-/hour)
        darkcurr = 0.0
        # The detector saturation level
        saturation = 65535.0
        # Percentage of detector range which is linear (i.e. everything
        # above nonlinear*saturation will be flagged as saturated)
        nonlinear = 0.86
        # Number of amplifiers
        numamplifiers = 2
        # Inverse gain (e-/ADU). A list should be provided if a detector
        # contains more than one amplifier.
        gain = 1.63, 1.7
        # Read-out noise (e-). A list should be provided if a detector
        # contains more than one amplifier.
        ronoise = 3.6, 3.6
        # Suffix to be appended to all saved calibration and extraction
        # frames.
        suffix = _02blue

# The fits file parameters and checks general to all data from the
# instrument to be reduced
[fits]
    # The unit of time keyword.  Options are: h, m, s, jd, mjd,
    # decimalyear, unix, cxcsec, gps, plot_date, datetime, iso, isot,
    # yday, fits, byear, jyear, byear_str, jyear_str
    timeunit = mjd
    # (List of) Extension(s) with data to read (0-indexed)
    headext = 0, 1, 2, 3, 4
    # One or more lamp names
    lamps = MERCURY, NEON, ARGON, CADMIUM, ZINC, KRYPTON, XENON, FEARGON, DEUTERIUM, FLAMP1, FLAMP2, HALOGEN
    # Dictionary with the definitions of keywords to used from the
    # header.  Variable names must be unique and define a unique header
    # keyword.  If a single string value, the keyword is expected to be
    # in the primary (extension 0) header.  If defined as a 2-element
    # list, the first element is the extension with the approipriate
    # header keyword (0-indexed) and the second is the keyword name.
    [[keydef]]
        target = 0, TARGNAME
        idname = 0, OBSTYPE
        time = 0, MJD-OBS
        date = 0, DATE
        ra = 0, RA
        dec = 0, DEC
        airmass = 0, AIRMASS
        binning = 0, BINNING
        exptime = 0, ELAPTIME
        decker = 0, SLITNAME
        dichroic = 0, DICHNAME
        dispname = 0, GRISNAME
        filter1 = 0, BLUFILT
        hatch = 0, TRAPDOOR
        lampstat01 = 0, MERCURY
        lampstat02 = 0, NEON
        lampstat03 = 0, ARGON
        lampstat04 = 0, CADMIUM
        lampstat05 = 0, ZINC
        lampstat06 = 0, KRYPTON
        lampstat07 = 0, XENON
        lampstat08 = 0, FEARGON
        lampstat09 = 0, DEUTERI
        lampstat10 = 0, FLAMP1
        lampstat11 = 0, FLAMP2
        lampstat12 = 0, HALOGEN
        instrument = 0, INSTRUME
        naxis1 = 1, NAXIS
        naxis2 = 2, NAXIS
        naxis3 = 3, NAXIS
        naxis4 = 4, NAXIS
        ccdgeom = 1, CCDGEOM
        ccdname = 1, CCDNAME
    # Dictionary with checks to perform on the keyword values for all
    # fits files.  The dictionary keyword must be one of the defined
    # header keywords in 'keydef'.  Single values imply an equality
    # check.  A list with two values implies a lower and upper range.
    # To set *only* a lower or upper limit, set the unconstrained limit
    # to None.  All limits are exclusive.  I.e, to get a value >0, set
    # '0, None'; to get <30, set 'None, 30'.
    [[keycheck]]
        instrument = LRISBLUE
        naxis1 = 2
        naxis2 = 2
        naxis3 = 2
        naxis4 = 2
        ccdgeom = e2v (Marconi) CCD44-82
        ccdname = 00151-14-1

# The identification rules and checks for bias frames
[biasid]
    # Frame type.  Options are: bias, pixelflat, arc, pinhole, trace,
    # standard, science
    frametype = bias
    # Frame types, **other than this type**, that can also be used as
    # this type.  E.g., this frametype is 'pixelflat' but can also be
    # used as a 'trace' frame.
    canbe = None
    # Dictionary with checks to perform on the keyword values to select
    # frames of this type.  The dictionary keyword must be one of the
    # defined header keywords in the associated \`fitspar\` parameter
    # set.  Single values imply an equality check.  A list with two
    # values implies a lower and upper range.  To set *only* a lower or
    # upper limit, set the unconstrained limit to None.  All limits are
    # exclusive.  I.e, to get a value >0, set '0, None'; to get <30, set
    # 'None, 30'.
    [[keycheck]]
        idname = DARK
        lampstat = off
        hatch = closed
        exptime = None, 1
    # Dictionary with properties used to isolate frames of this type.
    # TODO: Give examples of how to use this
    [[match]]
        binning = 

# The identification rules and checks for pixel-flat frames
[pixelflatid]
    # Frame type.  Options are: bias, pixelflat, arc, pinhole, trace,
    # standard, science
    frametype = pixelflat
    # Frame types, **other than this type**, that can also be used as
    # this type.  E.g., this frametype is 'pixelflat' but can also be
    # used as a 'trace' frame.
    canbe = trace
    # Dictionary with checks to perform on the keyword values to select
    # frames of this type.  The dictionary keyword must be one of the
    # defined header keywords in the associated \`fitspar\` parameter
    # set.  Single values imply an equality check.  A list with two
    # values implies a lower and upper range.  To set *only* a lower or
    # upper limit, set the unconstrained limit to None.  All limits are
    # exclusive.  I.e, to get a value >0, set '0, None'; to get <30, set
    # 'None, 30'.
    [[keycheck]]
        idname = OBJECT
        hatch = open
        exptime = None, 30
    # Dictionary with properties used to isolate frames of this type.
    # TODO: Give examples of how to use this
    [[match]]
        binning = 
        dichroic = 
        dispname = 
        decker = 

# The identification rules and checks for arc frames
[arcid]
    # Frame type.  Options are: bias, pixelflat, arc, pinhole, trace,
    # standard, science
    frametype = arc
    # Frame types, **other than this type**, that can also be used as
    # this type.  E.g., this frametype is 'pixelflat' but can also be
    # used as a 'trace' frame.
    canbe = None
    # Dictionary with checks to perform on the keyword values to select
    # frames of this type.  The dictionary keyword must be one of the
    # defined header keywords in the associated \`fitspar\` parameter
    # set.  Single values imply an equality check.  A list with two
    # values implies a lower and upper range.  To set *only* a lower or
    # upper limit, set the unconstrained limit to None.  All limits are
    # exclusive.  I.e, to get a value >0, set '0, None'; to get <30, set
    # 'None, 30'.
    [[keycheck]]
        idname = OBJECT
        lampstat = atleastone
        hatch = closed
    # Dictionary with properties used to isolate frames of this type.
    # TODO: Give examples of how to use this
    [[match]]
        binning = 
        dichroic = 
        dispname = 
        decker = 

# The identification rules and checks for pin-hole frames
[pinholeid]
    # Frame type.  Options are: bias, pixelflat, arc, pinhole, trace,
    # standard, science
    frametype = pinhole
    # Frame types, **other than this type**, that can also be used as
    # this type.  E.g., this frametype is 'pixelflat' but can also be
    # used as a 'trace' frame.
    canbe = None
    # Dictionary with properties used to isolate frames of this type.
    # TODO: Give examples of how to use this
    match = None
    # Dictionary with checks to perform on the keyword values to select
    # frames of this type.  The dictionary keyword must be one of the
    # defined header keywords in the associated \`fitspar\` parameter
    # set.  Single values imply an equality check.  A list with two
    # values implies a lower and upper range.  To set *only* a lower or
    # upper limit, set the unconstrained limit to None.  All limits are
    # exclusive.  I.e, to get a value >0, set '0, None'; to get <30, set
    # 'None, 30'.
    [[keycheck]]
        exptime = 999999, None

# The identification rules and checks for trace frames
[traceid]
    # Frame type.  Options are: bias, pixelflat, arc, pinhole, trace,
    # standard, science
    frametype = trace
    # Frame types, **other than this type**, that can also be used as
    # this type.  E.g., this frametype is 'pixelflat' but can also be
    # used as a 'trace' frame.
    canbe = None
    # Dictionary with checks to perform on the keyword values to select
    # frames of this type.  The dictionary keyword must be one of the
    # defined header keywords in the associated \`fitspar\` parameter
    # set.  Single values imply an equality check.  A list with two
    # values implies a lower and upper range.  To set *only* a lower or
    # upper limit, set the unconstrained limit to None.  All limits are
    # exclusive.  I.e, to get a value >0, set '0, None'; to get <30, set
    # 'None, 30'.
    [[keycheck]]
        idname = OBJECT
        hatch = open
        exptime = None, 30
    # Dictionary with properties used to isolate frames of this type.
    # TODO: Give examples of how to use this
    [[match]]
        binning = 
        dichroic = 
        dispname = 
        decker = 

# The identification rules and checks for standard frames
[standardid]
    # Frame type.  Options are: bias, pixelflat, arc, pinhole, trace,
    # standard, science
    frametype = standard
    # Frame types, **other than this type**, that can also be used as
    # this type.  E.g., this frametype is 'pixelflat' but can also be
    # used as a 'trace' frame.
    canbe = None
    # Dictionary with checks to perform on the keyword values to select
    # frames of this type.  The dictionary keyword must be one of the
    # defined header keywords in the associated \`fitspar\` parameter
    # set.  Single values imply an equality check.  A list with two
    # values implies a lower and upper range.  To set *only* a lower or
    # upper limit, set the unconstrained limit to None.  All limits are
    # exclusive.  I.e, to get a value >0, set '0, None'; to get <30, set
    # 'None, 30'.
    [[keycheck]]
        idname = OBJECT
        lampstat = off
        hatch = open
    # Dictionary with properties used to isolate frames of this type.
    # TODO: Give examples of how to use this
    [[match]]
        dispname = 
        dichroic = 
        binning = 
        decker = 

# The identification rules and checks for science frames
[scienceid]
    # Frame type.  Options are: bias, pixelflat, arc, pinhole, trace,
    # standard, science
    frametype = science
    # Frame types, **other than this type**, that can also be used as
    # this type.  E.g., this frametype is 'pixelflat' but can also be
    # used as a 'trace' frame.
    canbe = None
    # Dictionary with properties used to isolate frames of this type.
    # TODO: Give examples of how to use this
    match = None
    # Dictionary with checks to perform on the keyword values to select
    # frames of this type.  The dictionary keyword must be one of the
    # defined header keywords in the associated \`fitspar\` parameter
    # set.  Single values imply an equality check.  A list with two
    # values implies a lower and upper range.  To set *only* a lower or
    # upper limit, set the unconstrained limit to None.  All limits are
    # exclusive.  I.e, to get a value >0, set '0, None'; to get <30, set
    # 'None, 30'.
    [[keycheck]]
        idname = OBJECT
        lampstat = off
        hatch = open
        exptime = 29, None

# The frames and combination rules for the bias correction
[biasgroup]
    # Frame type.  Options are: bias, pixelflat, arc, pinhole, trace,
    # standard, science
    frametype = bias
    # A master calibrations file to use if it exists
    useframe = overscan
    # Number of frames to use of this type
    number = 0
    # Parameters used when combining frames of this type
    [[combine]]
        # Match frames with pixel counts that are within N-sigma of one
        # another, where match=N below.  If N < 0, nothing is matched.
        match = -1
        # Method used to combine frames.  Options are: mean, median,
        # weightmean
        method = mean
        # Handling of saturated pixels.  Options are: reject, force,
        # nothing
        satpix = reject
        # Sigma level to reject cosmic rays (<= 0.0 means no CR removal)
        cosmics = 20.0
        # Number of pixels to reject at the lowest and highest ends of
        # the distribution; i.e., n_lohi = low, high.  Use None for no
        # limit.
        n_lohi = 0, 0
        # Sigma-clipping level at the low and high ends of the
        # distribution; i.e., sig_lohi = low, high.  Use None for no
        # limit.
        sig_lohi = 3.0, 3.0
        # If all pixels are rejected, replace them using this method.
        # Options are: min, max, mean, median, weightmean, maxnonsat
        replace = maxnonsat

# The frames and combination rules for the field flattening
[pixelflatgroup]
    # Frame type.  Options are: bias, pixelflat, arc, pinhole, trace,
    # standard, science
    frametype = pixelflat
    # A master calibrations file to use if it exists
    useframe = None
    # Number of frames to use of this type
    number = 1
    # Parameters used when combining frames of this type
    [[combine]]
        # Match frames with pixel counts that are within N-sigma of one
        # another, where match=N below.  If N < 0, nothing is matched.
        match = -1
        # Method used to combine frames.  Options are: mean, median,
        # weightmean
        method = mean
        # Handling of saturated pixels.  Options are: reject, force,
        # nothing
        satpix = reject
        # Sigma level to reject cosmic rays (<= 0.0 means no CR removal)
        cosmics = 20.0
        # Number of pixels to reject at the lowest and highest ends of
        # the distribution; i.e., n_lohi = low, high.  Use None for no
        # limit.
        n_lohi = 0, 0
        # Sigma-clipping level at the low and high ends of the
        # distribution; i.e., sig_lohi = low, high.  Use None for no
        # limit.
        sig_lohi = 3.0, 3.0
        # If all pixels are rejected, replace them using this method.
        # Options are: min, max, mean, median, weightmean, maxnonsat
        replace = maxnonsat

# The frames and combination rules for the wavelength calibration
[arcgroup]
    # Frame type.  Options are: bias, pixelflat, arc, pinhole, trace,
    # standard, science
    frametype = arc
    # A master calibrations file to use if it exists
    useframe = None
    # Number of frames to use of this type
    number = 1
    # Parameters used when combining frames of this type
    [[combine]]
        # Match frames with pixel counts that are within N-sigma of one
        # another, where match=N below.  If N < 0, nothing is matched.
        match = -1
        # Method used to combine frames.  Options are: mean, median,
        # weightmean
        method = mean
        # Handling of saturated pixels.  Options are: reject, force,
        # nothing
        satpix = reject
        # Sigma level to reject cosmic rays (<= 0.0 means no CR removal)
        cosmics = 20.0
        # Number of pixels to reject at the lowest and highest ends of
        # the distribution; i.e., n_lohi = low, high.  Use None for no
        # limit.
        n_lohi = 0, 0
        # Sigma-clipping level at the low and high ends of the
        # distribution; i.e., sig_lohi = low, high.  Use None for no
        # limit.
        sig_lohi = 3.0, 3.0
        # If all pixels are rejected, replace them using this method.
        # Options are: min, max, mean, median, weightmean, maxnonsat
        replace = maxnonsat

# The frames and combination rules for tracing the slit centroid
[pinholegroup]
    # Frame type.  Options are: bias, pixelflat, arc, pinhole, trace,
    # standard, science
    frametype = pinhole
    # A master calibrations file to use if it exists
    useframe = None
    # Number of frames to use of this type
    number = 0
    # Parameters used when combining frames of this type
    [[combine]]
        # Match frames with pixel counts that are within N-sigma of one
        # another, where match=N below.  If N < 0, nothing is matched.
        match = -1
        # Method used to combine frames.  Options are: mean, median,
        # weightmean
        method = mean
        # Handling of saturated pixels.  Options are: reject, force,
        # nothing
        satpix = reject
        # Sigma level to reject cosmic rays (<= 0.0 means no CR removal)
        cosmics = 20.0
        # Number of pixels to reject at the lowest and highest ends of
        # the distribution; i.e., n_lohi = low, high.  Use None for no
        # limit.
        n_lohi = 0, 0
        # Sigma-clipping level at the low and high ends of the
        # distribution; i.e., sig_lohi = low, high.  Use None for no
        # limit.
        sig_lohi = 3.0, 3.0
        # If all pixels are rejected, replace them using this method.
        # Options are: min, max, mean, median, weightmean, maxnonsat
        replace = maxnonsat

# The frames and combination rules for tracing the slit edges
[tracegroup]
    # Frame type.  Options are: bias, pixelflat, arc, pinhole, trace,
    # standard, science
    frametype = trace
    # A master calibrations file to use if it exists
    useframe = None
    # Number of frames to use of this type
    number = 3
    # Parameters used when combining frames of this type
    [[combine]]
        # Match frames with pixel counts that are within N-sigma of one
        # another, where match=N below.  If N < 0, nothing is matched.
        match = -1
        # Method used to combine frames.  Options are: mean, median,
        # weightmean
        method = mean
        # Handling of saturated pixels.  Options are: reject, force,
        # nothing
        satpix = reject
        # Sigma level to reject cosmic rays (<= 0.0 means no CR removal)
        cosmics = 20.0
        # Number of pixels to reject at the lowest and highest ends of
        # the distribution; i.e., n_lohi = low, high.  Use None for no
        # limit.
        n_lohi = 0, 0
        # Sigma-clipping level at the low and high ends of the
        # distribution; i.e., sig_lohi = low, high.  Use None for no
        # limit.
        sig_lohi = 3.0, 3.0
        # If all pixels are rejected, replace them using this method.
        # Options are: min, max, mean, median, weightmean, maxnonsat
        replace = maxnonsat

# The frames and combination rules for the spectrophotometric standard
# observations
[standardgroup]
    # Frame type.  Options are: bias, pixelflat, arc, pinhole, trace,
    # standard, science
    frametype = standard
    # A master calibrations file to use if it exists
    useframe = None
    # Number of frames to use of this type
    number = 0
    # Parameters used when combining frames of this type
    [[combine]]
        # Match frames with pixel counts that are within N-sigma of one
        # another, where match=N below.  If N < 0, nothing is matched.
        match = -1
        # Method used to combine frames.  Options are: mean, median,
        # weightmean
        method = mean
        # Handling of saturated pixels.  Options are: reject, force,
        # nothing
        satpix = reject
        # Sigma level to reject cosmic rays (<= 0.0 means no CR removal)
        cosmics = 20.0
        # Number of pixels to reject at the lowest and highest ends of
        # the distribution; i.e., n_lohi = low, high.  Use None for no
        # limit.
        n_lohi = 0, 0
        # Sigma-clipping level at the low and high ends of the
        # distribution; i.e., sig_lohi = low, high.  Use None for no
        # limit.
        sig_lohi = 3.0, 3.0
        # If all pixels are rejected, replace them using this method.
        # Options are: min, max, mean, median, weightmean, maxnonsat
        replace = maxnonsat

# The frames and combination rules for the science observations
[sciencegroup]
    # Frame type.  Options are: bias, pixelflat, arc, pinhole, trace,
    # standard, science
    frametype = science
    # A master calibrations file to use if it exists
    useframe = None
    # Number of frames to use of this type
    number = 0
    # Parameters used when combining frames of this type
    [[combine]]
        # Match frames with pixel counts that are within N-sigma of one
        # another, where match=N below.  If N < 0, nothing is matched.
        match = -1
        # Method used to combine frames.  Options are: mean, median,
        # weightmean
        method = mean
        # Handling of saturated pixels.  Options are: reject, force,
        # nothing
        satpix = reject
        # Sigma level to reject cosmic rays (<= 0.0 means no CR removal)
        cosmics = 20.0
        # Number of pixels to reject at the lowest and highest ends of
        # the distribution; i.e., n_lohi = low, high.  Use None for no
        # limit.
        n_lohi = 0, 0
        # Sigma-clipping level at the low and high ends of the
        # distribution; i.e., sig_lohi = low, high.  Use None for no
        # limit.
        sig_lohi = 3.0, 3.0
        # If all pixels are rejected, replace them using this method.
        # Options are: min, max, mean, median, weightmean, maxnonsat
        replace = maxnonsat

# Parameters used to derive the wavelength solution
[wavelengths]
    # Method to use to fit the individual arc lines.  'fit' is likely
    # more accurate, but 'simple' uses a polynomial fit (to the log of a
    # gaussian) and is fast and reliable.  'arclines' uses the arclines
    # python package.Options are: simple, fit, arclines
    method = arclines
    # Name of one or more ions used for the wavelength calibration.  Use
    # None for no calibration.  Options are: ArI, CdI, HgI, HeI, KrI,
    # NeI, XeI, ZnI, ThAr
    lamps = None
    # Detection threshold for arc lines (in standard deviation)
    detection = 6.0
    # Number of brightest arc lines to search for in preliminary
    # identification
    numsearch = 20
    # Number of pixels to fit when deriving the centroid of the arc
    # lines (an odd number is best)
    nfitpix = 5
    # One or more pixels at which to manually identify a line
    IDpixels = None
    # Wavelengths of the manually identified lines
    IDwaves = None

# Define how the slits should be traced using the trace ?PINHOLE? frames
[slits]
    # Function use to trace the slit center.  Options are: polynomial,
    # legendre, chebyshev
    function = legendre
    # Order of the function to use.
    polyorder = 3
    # Number of times to median smooth a trace image prior to analysis
    # for slit/order edges
    medrep = 0
    # Manually set the number of slits to identify (>=1). 'auto' or -1
    # will automatically identify the number of slits.
    number = -1
    # How much to trim off each edge of each slit
    trim = 3, 3
    # Maximum number of pixels to allow for the gap between slits.  Use
    # None if the neighbouring slits are far apart or of similar
    # illumination.
    maxgap = None
    # Maximum shift in trace crude
    maxshift = 0.15
    # Integer number of pixels to consider beyond the slit edges.
    pad = 0
    # Sigma detection threshold for edge detection
    sigdetect = 20.0
    # If a slit spans less than this fraction over the spectral size of
    # the detector, it will be ignored (and reconstructed when/if an
    # 'order' PCA analysis is performed).
    fracignore = 0.01
    # Order of the 2D function used to fit the 2d solution for the
    # spatial size of all orders.
    diffpolyorder = 2
    # Add a single, user-defined slit based on its location on each
    # detector.  Syntax is a list of values, 2 per detector, that define
    # the slit according to column values.  The second value (for the
    # right edge) must be greater than 0 to be applied.  LRISr example:
    # setting single = -1, -1, 7, 295 means the code will skip the user-
    # definition for the first detector but adds one for the second.
    # None means no user-level slits defined.
    single = None
    # Mode for Sobel filtering.  Default is 'nearest' but the developers
    # find 'constant' works best for DEIMOS.
    sobel_mode = nearest
    # Parameters used for the PCA parameters in slit tracing
    [[pca]]
        # Select to perform the PCA using the pixel position
        # (pcatype=pixel) or by spectral order (pcatype=order).  Pixel
        # positions can be used for multi-object spectroscopy where the
        # gap between slits is irregular.  Order is used for echelle
        # spectroscopy or for slits with separations that are a smooth
        # function of the slit number.
        pcatype = pixel
        # Order of the polynomials to be used to fit the principle
        # components.  TODO: Provide more explanation
        params = 3, 2, 1, 0, 0, 0
        # The number of extra orders to predict in the negative (first
        # number) and positive (second number) direction.  Must be two
        # numbers in the list and they must be integers.
        extrapolate = 0, 0

# Define how to tract the slit tilts using the trace frames
[tilts]
    # Only use the arc lines that have an identified wavelength to trace
    # tilts
    idsonly = True
    # Method used to trace the tilt of the slit along an order.  Options
    # are: pca, spca, spline, interp, perp, zero
    method = spca
    # Parameters to use for the provided method.  TODO: Need more
    # explanation
    params = 1, 1, 1
    # Order of the polynomial function to be used for the tilt of an
    # individual arc line.  Must be 1 for eschelle data (ARMED
    # pipeline).
    order = 1
    # Order of the polynomial function to be used to fit the tilts along
    # the dispersion direction.  Only used by ARMED pipeline.
    disporder = 1

# Define how to tract the slit tilts using the trace frames
[objects]
    # Function to use to trace the object in each slit.  Options are:
    # ['polynomial', 'legendre', 'chebyshev']
    function = legendre
    # Order of the function to use to fit the object trace in each slit
    order = 2
    # Algorithm to use for finding objects.Options are: standard,
    # nminima
    find = standard
    # Parameter for Gaussian smoothing when find=nminima.
    nsmooth = 3
    # Ignore any objects within xedge of the edge of the slit
    xedge = 0.03
    # Method to use for tracing each object; only used with ARMED
    # pipeline.  Options are: pca, spca, spline, interp, perp, zero
    method = pca
    # Parameters for the requested method.  For pca, params is a list
    # containing the order of the polynomials that should be used to fit
    # the object trace principal components. For example, params = 1, 0
    # will fit 2 principal components, the first PC will be fit with a
    # first order polynomial, the second PC will be fit with a zeroth
    # order polynomial. TODO: What about the other methods?
    params = 1, 0

# Define how to extract 1D object spectra
[extract]
    # If desired, a fits file can be specified (of the appropriate
    # form)to specify the locations of the pixels on the detector (in
    # physical space).  TODO: Where is "appropriate form" specified?
    pixelmap = None
    # The size of the extracted pixels (as an scaled number of Arc
    # FWHM), -1 will not resample
    pixelwidth = 2.5
    # If the extraction has previously been performed and saved, load
    # the previous result
    reuse = False
    # Fitting function used to extract science data, only if the
    # extraction is 2D.  NOTE: options with suffix 'func' fits a
    # function to the pixels whereas those without this suffix take into
    # account the integration of the function over the pixel (and is
    # closer to truth).   Options are: gaussian, gaussfunc, moffat,
    # moffatfunc
    profile = gaussian
    # Maximum number of objects to extract in a science frame.  Use None
    # for no limit.
    maxnumber = None
    # List of manual extraction parameter sets
    manual = None
