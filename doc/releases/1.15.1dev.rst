
Version 1.15.1dev
=================

Installation Changes
--------------------

- Significant expansion of PypeIt's use of the cache system; see
  :ref:`data_installation`.  Important changes include that most cached files
  are now version dependent.  When upgrading to new versions of PypeIt, users
  should delete their cache and start fresh.

Dependency Changes
------------------

Functionality/Performance Improvements and Additions
----------------------------------------------------
- When dealing with `bkg_redux` reduction (i.e., A-B), a sky model (called `bkg_redux_skymodel`)
  is generated using the A frame, while the existing `skymodel` is generated using the A-B frame.
  This allows to have an actual 1D extracted sky spectrum and to perform the flexure correction for
  `bkg_redux` reduction.
- Various improvements in the flexure correction and added the possibility to use a modeled archive
  sky spectrum generated with `pypeit.wavemodel.nearIR_modelsky()` to perform the flexure correction.

Instrument-specific Updates
---------------------------

- Added example of improved wavelength solution for GEMINI/GMOS
- Expanded the template for `shane_kast_red` and the 1200/5000 grating

Script Changes
--------------

- Modifications to the cache-related :ref:`install_scripts` to accommodate
  expansion of and changes to the cache system.
- Added ``pypeit_clean_cache`` script to facilitate both viewing and removing
  files in the cache.

Datamodel Changes
-----------------
- `Spec2DObj` now has an additional image, called `bkg_redux_skymodel`, which is the "actual" sky model
  in the case of `bkg_redux` reduction (i.e., dithered observations). This image is not generated if
  `bkg_redux` is False. In any case, the `skymodel` is always generated.

Under-the-hood Improvements
---------------------------

- Introduced :class:`~pypeit.pypeitdata.PypeItDataPaths` to handle all
  interactions with the ``pypeit/data`` directory, which provides a unified
  interface for accessing on-disk and cached files.

Bug Fixes
---------

- The subpixel algorithm used to resample datacubes that are generated by `pypeit_coadd_datacube`
  produced error cubes that were not properly propagating the noise. The error cubes of the NGP
  algorithm were unaffected. The error cubes are now regularly inspected with vet tests to ensure
  the error cubes are reliable.

