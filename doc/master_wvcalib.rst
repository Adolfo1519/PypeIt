.. _master_wvcalib:

===============
MasterWaveCalib
===============

Overview
========

This file describes the data model for the `MasterWaveCalib`_.

The images are written to disk as a multi-extension FITS file
prefixed by `MasterWaveCalib`_ in the Masters/ folder.
See :ref:`masters:Masters Naming` for the naming convention.

Inspecting
==========

.. _pypeit-chk-wavecalib:

pypeit_chk_wavecalib
--------------------

You can print a set of simple diagnostics to the screen
with the **pypeit_chk_wavecalib** script, e.g. ::

     pypeit_chk_wavecalib Masters/MasterWaveCalib_A_1_MSC03.fits

     N. SpatID minWave Wave_cen maxWave dWave Nlin     IDs_Wave_range    IDs_Wave_cov(%)  RMS  fwhm
    --- ------ ------- -------- ------- ----- ---- --------------------- --------------- ----- ----
      0     32  6655.8   7604.3  8569.2 0.469   34  6680.120 -  8523.783            96.4 0.049  5.7
      1     95  6510.2   7458.8  8423.7 0.469   33  6534.687 -  8410.521            98.0 0.053  5.8
      2    164  6711.0   7659.5  8624.3 0.469   33  6718.897 -  8523.783            94.3 0.035  5.7
      3    234  6742.5   7691.1  8655.8 0.469   33  6931.379 -  8649.416            89.8 0.044  5.7
      4    304  6458.2   7406.6  8371.5 0.469   32  6508.325 -  8349.116            96.2 0.045  5.9

- *SpatID* is the ``PypeIt`` slit ID number.
- *minWave*, *maxWave*, *Wave_cen*, *dWave* are, respectively, the minimum wavelength value, the maximum
  wavelength value, the central wavelength, and the wavelength dispersion of the calibrated arc spectra.
  All the values are in Angstrom.
- *Nlin*, *IDs_Wave_range*, *IDs_Wave_cov(%)* are, respectively, the number, the wavelength range, and the
  spectral coverage of the identified and fitted arc lines.
- *RMS* is the RMS of the wavelength solution (in pixels).
- *fwhm* is the FWHM (in unbinned pixels) of the arc lines, i.e, the approximate spectral resolution.


PNGs
----

At present, the only way to examine the quality of this
step is by viewing the PNG file generated by the code.
:doc:`qa` describes how to access them.

There is 1 PNG file generated per slit.  Here is an
example from the `shane_kast_red` spectrograph.

.. image:: figures/arc_1d_fit.png

What you hope to see in your QA is:

 - On the left, many of the blue arc lines marked with IDs
 - In the upper right, an RMS < 0.1 pixels
 - In the lower right, a random scatter about 0 residuals


Trouble Shooting
================

Wavelength solutions are amongst the most challenging
part of data reduction.  See :doc:`wave_calib` for
extensive details on how PypeIt performs wavelength
calibration and related issues.


Current WaveCalib Data Model
============================

Internally, the image is held in
:class:`pypeit.wavecalib.WaveCalib`
which is a :class:`pypeit.datamodel.DataContainer`.
The datamodel written to disk is:

.. include:: include/datamodel_wavecalib.rst


