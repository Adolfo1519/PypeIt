name: CI Tests

on:
  push:
    branches:
    - master
    tags:
  pull_request:

env:
  SETUP_XVFB: True  # avoid issues if something tries to open a GUI window

jobs:
  ci-tests:
    name: Tox env ${{ matrix.python }}-${{ matrix.toxenv }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest]
        python: [3.8, 3.9]
        toxenv: [test, test-alldeps, test-linetoolsdev, test-gingadev, test-astropydev]
    steps:
    - name: Check out repository
      uses: actions/checkout@v2
    - name: Set up Python ${{ matrix.python }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python }}
    - name: Install base dependencies
      run: |
        python -m pip install --upgrade pip tox
    - name: Test with tox
      run: |
        tox -e ${{ matrix.toxenv }}

  os-tests:
    name: Python ${{ matrix.python }} on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [windows-latest, macos-latest]
        python: [3.8]
        toxenv: [test-alldeps]
    steps:
    - name: Check out repository
      uses: actions/checkout@v2
    - name: Set up Python ${{ matrix.python }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python }}
    - name: Install base dependencies
      run: |
        python -m pip install --upgrade pip tox
    - name: Test with tox
      run: |
        tox -e ${{ matrix.toxenv }}

  conda:
    name: Test under conda
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash -l {0}
    steps:
      - name: Check out repository
        uses: actions/checkout@v2
      - name: Set up miniconda
        uses: conda-incubator/setup-miniconda@v2
        with:
          python-version: 3.8
          activate-environment: pypeit
          environment-file: environment.yml
      - name: Show conda info
        run: conda info
      - name: List conda packages
        run: conda list
      - name: Show conda config
        run: conda config --show
      - name: Run tests using pytest
        run: pytest pypeit/tests

  codestyle:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Python codestyle check
      uses: actions/setup-python@v2
      with:
        python-version: 3.8
    - name: Install base dependencies
      run: |
        python -m pip install --upgrade pip
        python -m pip install pycodestyle
    - name: Check for runtime errors using pycodestyle
      run: |
        pycodestyle pypeit --count --select=E9
